(function (angular) {
    'use strict';

    var module = angular.module('webapp', ['LocalStorageModule', 'webapp.routes', 'webapp.controllers', 'webapp.directives', 'webapp.filters', 'webapp.services', 'webapp.config']);
})(window.angular);
angular.module('webapp.config', []).constant('environmentConfig', { "api": "https://dev.wealth.stonehagefleming.com/api" });
(function (angular) {
    'use strict';

    angular.module('webapp.controllers', []);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives', []);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.filters', []);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.routes', ['ngRoute']).config(['$routeProvider', function ($routeProvider) {

        $routeProvider.when('/', {
            templateUrl: 'views/dashboard.html',
            controller: 'dashboardCtrl'
        }).otherwise({
            redirectTo: '/'
        });
    }]);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.services', []);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.controllers').controller('dashboardCtrl', controller);

    function controller($scope, dataService) {
        angular.extend($scope, {
            peopleDoc: [],
            peopleDocLength: 0,
            slideAmt: 0,
            people: [],
            averageBalance: 0,
            selectedPerson: undefined,
            color: [],
            selectedColor: {},
            test: ''
        });

        let perSlide = 5;

        dataService().get().then(function (receivedData) {

            $scope.peopleDoc = receivedData;
            $scope.peopleDocLength = $scope.peopleDoc.length;
            $scope.slidesAmt = Math.ceil($scope.peopleDocLength / perSlide);

            console.log($scope.peopleDocLength, $scope.peopleDoc);

            $scope.people = $scope.peopleDoc.map(function (x) {
                return x.name;
            });

            $scope.averageBalance = $scope.peopleDoc.map(function (x) {
                return x.balance;
            });
        }, function () {
            alert('fail');
        });

        $scope.selectPerson = person => {
            $scope.selectedPerson = person;
        };

        $scope.colors = [{ name: '#11C596' }, { name: '#39AAD9' }, { name: '#49AA49' }, { name: '#1CC8D3' }, { name: '#D3C81B' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }];

        $scope.selectColor = color => {
            $scope.selectedColor = color;
        };

        $scope.test = 'This is a test. If you are seeing this, it means that you have set angular up correctly :)';
    }
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives').directive('pgColorPicker', directive);

    function directive() {
        return {
            restrict: 'E',
            scope: {
                colors: '=',
                selectColor: '='
            },
            replace: true,
            templateUrl: 'views/components/pg-color-picker.html',
            link: link
        };

        function link(scope) {
            angular.extend(scope, {
                showColorPicker: false,
                toggleColorPicker: toggleColorPicker
            });

            function toggleColorPicker() {
                scope.showColorPicker = !scope.hidePicker;
            }
        }
    }
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives').directive('pgSidebar', directive);

    function directive() {
        return {
            restrict: 'E',
            scope: {
                // colors: '=',
                // selectColor: '='
            },
            replace: true,
            templateUrl: 'views/components/pg-sidebar.html',
            link: link
        };

        function link(scope) {
            angular.extend(scope, {
                sidebarItems: []
            });

            scope.sidebarItems = [{
                item: 'home',
                subItems: ['one', 'two', 'three']
            }, {
                item: 'about',
                subItems: ['one', 'two', 'three']
            }, {
                item: 'contact',
                subItems: ['one', 'two', 'three']
            }];
        }
    }
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives').directive('pgSliderDetail', directive);

    function directive() {
        return {
            restrict: 'E',
            scope: {
                selectedPerson: '=',
                peopleDocLength: '='
            },
            replace: true,
            templateUrl: 'views/components/pg-slider-detail.html',
            link: link
        };

        function link(scope) {
            angular.extend(scope, {
                options: {},
                rangeModel: 50,
                setOption: setOption,
                isDocked: {},
                dock: dock,
                close: close,
                returnObjKey: returnObjKey
            });

            scope.options = {
                open: false,
                dockStates: [{
                    partial: false
                }, {
                    full: false
                }]
            };

            function setOption(option, optionParent) {
                if (optionParent) {
                    scope.options[optionParent][scope.returnObjKey(option)] = !scope.options[optionParent][scope.returnObjKey(option)];
                }
                console.log(scope.options[optionParent][scope.returnObjKey(option)]);
            }

            function dock(option) {
                scope.isDocked[option] = !scope.isDocked[option];
                console.log(scope.isDocked);
            }

            function close() {
                scope.isDocked = {};
                scope.selectedPerson = false;
            }

            function returnObjKey(obj) {
                return Object.keys(obj)[0];
            }
        }
    }
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives').directive('pgSlider', directive);

    function directive() {
        return {
            restrict: 'E',
            scope: {
                peopleDoc: '=',
                selectPerson: '=',
                selectedPerson: '='
            },
            replace: true,
            templateUrl: 'views/components/pg-slider.html',
            link: link
        };

        function link(scope) {
            angular.extend(scope, {
                slideNavigate: slideNavigate
            });

            let slider = document.querySelector('.slider');
            let sliderIncr = 0;
            let dimensions = {
                width: slider.getBoundingClientRect().width,
                height: slider.getBoundingClientRect().height
            };

            function slideNavigate(direction) {
                incrOrDecr(direction);

                slider.style.transform = 'translateX(' + sliderIncr * dimensions.width + 'px' + ')';
            }

            function incrOrDecr(direction) {
                if (direction === 'prev') {
                    sliderIncr++;
                }
                if (direction === 'next') {
                    sliderIncr--;
                }
            }
        }
    }
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.services').service('dataService', ['$q', '$http', function ($q, $http) {

        let service = () => {
            return {
                get: () => {
                    var q = $q.defer();
                    $http.get('https://api.myjson.com/bins/y0id').success(data => {
                        q.resolve(data);
                        // q.reject('GIFT FAIL')
                    });

                    return q.promise;
                }
            };
        };

        return service;
    }]);
})(window.angular);
//# sourceMappingURL=scripts.min.js.map
