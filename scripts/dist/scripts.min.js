(function (angular) {
    'use strict';

    var module = angular.module('webapp', ['LocalStorageModule', 'webapp.routes', 'webapp.controllers', 'webapp.directives', 'webapp.filters', 'webapp.services', 'webapp.config']);
})(window.angular);
angular.module('webapp.config', []).constant('environmentConfig', { "api": "https://dev.wealth.stonehagefleming.com/api" });
(function (angular) {
    'use strict';

    angular.module('webapp.controllers', []);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives', []);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.filters', []);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.routes', ['ngRoute']).config(['$routeProvider', function ($routeProvider) {

        $routeProvider.when('/', {
            templateUrl: 'views/dashboard.html',
            controller: 'dashboardCtrl'
        }).otherwise({
            redirectTo: '/'
        });
    }]);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.services', []);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.controllers').controller('dashboardCtrl', ['$scope', 'dataService', function ($scope, dataService) {
        dataService().get().then(function (receivedData) {
            console.log(receivedData);

            $scope.peopleDoc = receivedData;
            console.log($scope.peopleDoc);

            $scope.people = $scope.peopleDoc.map(function (x) {
                return x.name;
            });

            $scope.averageBalance = $scope.peopleDoc.map(function (x) {
                return x.balance;
            });
        }, function () {
            alert('fail');
        });

        $scope.selectPerson = person => {
            $scope.selectedPerson = person;
        };

        $scope.colors = [{ name: '#11C596' }, { name: '#39AAD9' }, { name: '#49AA49' }, { name: '#1CC8D3' }, { name: '#D3C81B' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }, { name: '#e6e6e6' }];

        $scope.selectColor = color => {
            $scope.selectedColor = color;
        };

        $scope.test = 'This is a test. If you are seeing this, it means that you have set angular up correctly :)';
    }]);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives').directive('pgColorPicker', [() => {
        return {
            restrict: 'E',
            scope: {
                colors: '=',
                selectColor: '='
            },
            replace: true,
            templateUrl: 'views/components/pg-color-picker.html',

            link: scope => {

                scope.showColorPicker = false;

                scope.toggleColorPicker = () => {
                    scope.showColorPicker = !scope.hidePicker;
                };

                // scope.selectColor = (color) => {
                //     scope.selectTest(color);
                // };
            }
        };
    }]);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives').directive('pgSidebar', [() => {
        return {
            restrict: 'E',
            scope: {
                // colors: '=',
                // selectColor: '='
            },
            replace: true,
            templateUrl: 'views/components/pg-sidebar.html',

            link: scope => {
                scope.sidebarItems = [{
                    item: 'home',
                    subItems: ['one', 'two', 'three']
                }, {
                    item: 'about',
                    subItems: ['one', 'two', 'three']
                }, {
                    item: 'contact',
                    subItems: ['one', 'two', 'three']
                }];
                console.log(scope.sidebarItems[0]);
                console.log(scope.sidebarItems);
            }
        };
    }]);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives').directive('pgSliderDetail', [() => {
        return {
            restrict: 'E',
            scope: {
                selectedPerson: '='
            },
            replace: true,
            templateUrl: 'views/components/pg-slider-detail.html',

            link: scope => {
                scope.isDocked = {
                    partial: false,
                    full: false
                };

                scope.detailDock = option => {
                    if (option === 'full') scope.isDocked.partial = false;
                    if (option === 'partial') scope.isDocked.full = false;
                    scope.isDocked[option] = !scope.isDocked[option];
                };
            }
        };
    }]);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.directives').directive('pgSlider', [() => {
        return {
            restrict: 'E',
            scope: {
                peopleDoc: '=',
                selectPerson: '='
            },
            replace: true,
            templateUrl: 'views/components/pg-slider.html',

            link: (scope, element) => {
                let slider = document.querySelector('.slider');
                let sliderIncr = 0;
                let sliderPrev = document.querySelector('.js-slide-prev');
                let sliderNext = document.querySelector('.js-slide-next');

                let dimensions = {
                    width: slider.getBoundingClientRect().width,
                    height: slider.getBoundingClientRect().height
                };

                sliderPrev.addEventListener('click', prev);
                sliderNext.addEventListener('click', next);

                function prev() {
                    slide('prev');
                }
                function next() {
                    slide('next');
                }

                function slide(direction) {

                    incrOrDecr(direction);

                    console.log(sliderIncr);

                    if (direction === 'prev') {
                        console.log(dimensions.width, slider.style);
                    }
                    if (direction === 'next') {
                        console.log('NEXT');
                    }

                    slider.style.transform = 'translateX(' + sliderIncr * dimensions.width + 'px' + ')';
                }

                function incrOrDecr(direction) {
                    if (direction === 'prev') {
                        sliderIncr++;
                    }
                    if (direction === 'next') {
                        sliderIncr--;
                    }
                }
            }
        };
    }]);
})(window.angular);
(function (angular) {
    'use strict';

    angular.module('webapp.services').service('dataService', ['$q', '$http', function ($q, $http) {

        let service = () => {
            return {
                get: () => {
                    var q = $q.defer();
                    $http.get('https://api.myjson.com/bins/y0id').success(data => {
                        q.resolve(data);
                        // q.reject('GIFT FAIL')
                    });

                    return q.promise;
                }
            };
        };

        return service;
    }]);
})(window.angular);
//# sourceMappingURL=scripts.min.js.map
